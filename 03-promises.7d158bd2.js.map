{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,gBAClCE,WAAYH,SAASC,cAAc,6BACnCG,UAAWJ,SAASC,cAAc,4BAClCI,YAAaL,SAASC,cAAc,+BAKtC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbV,EAAKI,UAAUa,iBAAiB,SAehC,SAAuBC,GACrBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOrB,EAAKK,WAAWiB,OAC/BC,EAAOF,OAAOrB,EAAKM,UAAUgB,OAC7BE,EAASH,OAAOrB,EAAKO,YAAYe,OAGrC,GAFAG,QAAQC,IAAIH,GAEPvB,EAAKK,WAAWiB,MAAQ,GAAKtB,EAAKM,UAAUgB,MAAQ,GAAKtB,EAAKO,YAAYe,MAAQ,EACrF,OAAOxB,EAAA6B,OAAOC,QAAQ,6BAExB,IAAK,IAAIC,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACrDrB,EAAcqB,EAAUT,GACrBU,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBZ,EAAA6B,OAAOI,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBZ,EAAA6B,OAAOM,QAAQ,sBAAoBxB,QAAeC,MAAU,IAElEU,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btnSubmit: document.querySelector('.form button'),\n  inputDelay: document.querySelector('.form input[name=\"delay\"]'),\n  inputStep: document.querySelector('.form input[name=\"step\"]'),\n  inputAmount: document.querySelector('.form input[name=\"amount\"]'),\n};\n\nrefs.btnSubmit.addEventListener('click', onSubmitClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  let delay = Number(refs.inputDelay.value);\n  let step = Number(refs.inputStep.value);\n  let amount = Number(refs.inputAmount.value);\n  console.log(step);\n\n  if ((refs.inputDelay.value < 0 || refs.inputStep.value < 0 || refs.inputAmount.value < 0)) {\n    return Notify.warning('Please enter correct data');\n  }\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  delay += step;\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","btnSubmit","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","console","log","Notify","warning","position1","then","success","catch","failure"],"version":3,"file":"03-promises.7d158bd2.js.map"}