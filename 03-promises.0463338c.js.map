{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,gBAClCE,WAAYH,SAASC,cAAc,6BACnCG,UAAWJ,SAASC,cAAc,4BAClCI,YAAaL,SAASC,cAAc,+BA8BtC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAnCPV,EAAKI,UAAUa,iBAAiB,SAGhC,SAAuBC,GACrBA,EAAEC,iBACF,IAAMC,EAAQC,OAAOrB,EAAKK,WAAWiB,OAC/BC,EAAOF,OAAOrB,EAAKM,UAAUgB,OAC7BE,EAASH,OAAOrB,EAAKO,YAAYe,OAEvC,GAAKtB,EAAKK,WAAWiB,MAAWtB,EAAKM,UAAUgB,MAAYtB,EAAKO,YAAYe,MAAQ,EAClF,OAAOxB,EAAA2B,OAAOC,QAAQ,mCAExB,IAAK,IAAIC,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDnB,EAAcmB,EAAUP,GACrBQ,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBZ,EAAA2B,OAAOK,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAH,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBZ,EAAA2B,OAAOQ,QAAQ,sBAAuCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAKlEU,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btnSubmit: document.querySelector('.form button'),\n  inputDelay: document.querySelector('.form input[name=\"delay\"]'),\n  inputStep: document.querySelector('.form input[name=\"step\"]'),\n  inputAmount: document.querySelector('.form input[name=\"amount\"]'),\n};\n\n\nrefs.btnSubmit.addEventListener('click', onSubmitClick);\n\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  const delay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n\n  if ((refs.inputDelay.value < 0, refs.inputStep.value <= 0, refs.inputAmount.value < 0)) {\n    return Notify.warning('Please enter enter correct data');\n  }\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n      \n  }\n  delay += step;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n// function onBtnStartClick(e) {\n//   e.preventDefault();\n//   let delay = Number(delayInput.value);\n//   let step = Number(stepInput.value);\n//   let amount = Number(amountInput.value);\n//   if (delayInput.value < 0  stepInput.value < 0  amountInput.value <= 0) {\n//     return  Notify.warning('Please enter enter correct data');\n// }\n//   for (let position = 1; position <= amount; position += 1) {\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delay += step;\n//   }\n\n// }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btnSubmit","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","Notify","warning","position1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.0463338c.js.map"}